schedules:
  adhoc:
    schedule: adhoc
    branches:
      include: [master] 
architecture:
  - x64
os:
  - ubuntu/trusty64/cpp
  - ubuntu/xenial64
  - centos/6-64
  - centos/7-64
build:
  - script: |
      echo "Running packaging job"
package:
  include: # list of files and glob paths to include in the artifact, relative to the current working directory
    - ext/packaging/packages/*
release:
    after:
      each:
        - script: |
            LIBUV_VERSION=1.14.0
            TOKENS=($(echo ${OS_VERSION} | tr "/" " "))
            DISTRO=${TOKENS[0]}
            RELEASE=${TOKENS[1]}
            CPP_DRIVER_VERSION=2.7.0
            CPP_DRIVER_SUBVERSION=1

            if [ "${DISTRO}" = "ubuntu" ]; then
              NAME=$(echo ${RELEASE%??})
              ARCHITECTURE=${RELEASE:-2}
              PACKAGE_TYPE=deb
              PACKAGE_INSTALL="dpkg -i"
              PACKAGE_UTILITY="apt-get"
              PHP_VERSIONS=( php5.6-dev php7.0-dev php7.1-dev )
              if [ "${NAME}" = "trusty" ]; then
                RELEASE=14.04
              elif [ "${NAME}" = "xenial" ]; then
                RELEASE=16.04
              else
                printf "Unsupported Ubuntu Version: %s\n" ${RELEASE}
                exit 1
              fi
              CPP_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver_$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}_amd64.deb
              CPP_DEV_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver-dev_$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}_amd64.deb
              CPP_DRIVER=cassandra-cpp-driver_$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}_amd64.deb
              CPP_DEV_DRIVER=cassandra-cpp-driver-dev_$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}_amd64.deb

            elif [ "${DISTRO}" = "centos" ]; then
              TOKENS=($(echo ${RELEASE} | tr "-" " "))
              NAME=${DISTRO}
              RELEASE=${TOKENS[0]}
              ARCHITECTURE=${TOKENS[1]}
              PACKAGE_TYPE=rpm
              PACKAGE_INSTALL="rpm -i"
              PACKAGE_UTILITY="yum"
              PHP_VERSIONS=( php56w-devel php70w-devel php71w-devel )
              if [ "${RELEASE}" = "7" ]; then
                CPP_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.centos.x86_64.rpm
                CPP_DEV_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver-devel-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.centos.x86_64.rpm
                CPP_DRIVER=cassandra-cpp-driver-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.centos.x86_64.rpm
                CPP_DEV_DRIVER=cassandra-cpp-driver-devel-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.centos.x86_64.rpm
              elif [ "${RELEASE}" = "6" ]; then
                CPP_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.x86_64.rpm
                CPP_DEV_DRIVER_LOCATION=http://downloads.datastax.com/cpp-driver/$DISTRO/$RELEASE/cassandra/v$CPP_DRIVER_VERSION/cassandra-cpp-driver-devel-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.x86_64.rpm
                CPP_DRIVER=cassandra-cpp-driver-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.x86_64.rpm
                CPP_DEV_DRIVER=cassandra-cpp-driver-devel-$CPP_DRIVER_VERSION-${CPP_DRIVER_SUBVERSION}.el${RELEASE}.x86_64.rpm
              else
                printf "Unsupported Centos Version: %s\n" ${RELEASE}
                exit 1
              fi
            else
              printf "Unsupported OS: %s\n" ${OS_VERSION}
              exit 1
            fi

            pushd ext/packaging            
            mkdir packages

            # Build libuv, install, and copy to "packages"
            echo "Building libuv Packages [${LIBUV_VERSION}] ...\n"
            git clone --depth 1 https://github.com/mpenick/libuv-packaging.git libuv-packaging
            
            pushd libuv-packaging
            ./build_${PACKAGE_TYPE}.sh ${LIBUV_VERSION}
            popd
            find libuv-packaging/build -type f -name "*.${PACKAGE_TYPE}" -exec mv {} packages \;
            sudo ${PACKAGE_INSTALL} packages/libuv*.${PACKAGE_TYPE}

            # Download and Install cpp core drivers
            wget $CPP_DRIVER_LOCATION $CPP_DEV_DRIVER_LOCATION
            sudo ${PACKAGE_INSTALL} $CPP_DRIVER $CPP_DEV_DRIVER

            # Build, package and upload DataStax PHP driver
            echo "Building DataStax PHP driver ..."
            for PHP_VERSION in "${PHP_VERSIONS[@]}"
                do
                  sudo ${PACKAGE_UTILITY} install -y ${PHP_VERSION}
                  ./build_${PACKAGE_TYPE}.sh
                  find build -type f -name "*.${PACKAGE_TYPE}" -exec mv {} packages \; 
                  rm -rf build
                  PHP_TOKENS=($(echo ${PHP_VERSION} | tr "-" " "))
                  sudo ${PACKAGE_UTILITY} remove -y ${PHP_TOKENS[0]}-common
                done
            pushd packages
            # Uploading driver packages
            curl -$ARTIFACTORY_CREDS -T "{$(echo php*-cassandra-driver* | tr ' ' ',')}" "https://datastax.jfrog.io/datastax/cpp-php-drivers/php-driver/builds/{$BUILD_NUMBER}/$DISTRO/$RELEASE/cassandra/v$version/" 

            # Uploading libuv packages
            curl -$ARTIFACTORY_CREDS -T "{$(echo libuv* | tr ' ' ',')}" "https://datastax.jfrog.io/datastax/cpp-php-drivers/php-driver/builds/{$BUILD_NUMBER}/$DISTRO/$RELEASE/dependencies/libuv/v$LIBUV_VERSION/"
            popd
